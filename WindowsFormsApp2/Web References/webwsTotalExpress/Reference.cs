//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApp2.webwsTotalExpress
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Xml;
    using System.IO;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "webservice_calculo_frete.totalBinding", Namespace = "http://edi.totalexpress.com.br/soap/webservice_calculo_frete.total")]
    public partial class webservice_calculo_fretetotal : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback calcularFreteOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public webservice_calculo_fretetotal()
        {
            this.Url = global::WindowsFormsApp2.Properties.Settings.Default.WindowsFormsApp2_webwsTotalExpress_webservice_calculo_frete_total;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event calcularFreteCompletedEventHandler calcularFreteCompleted;

        /// <remarks/>
        //[System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:simulaFrete#calcularFrete", RequestNamespace="urn:calcularFrete", ResponseNamespace="urn:calcularFrete")]
        //[return: System.Xml.Serialization.SoapElementAttribute("calcularFreteResponse")]
        //public calcularFreteResponse calcularFrete(calcularFreteRequest calcularFreteRequest) {
        //    object[] results = this.Invoke("calcularFrete", new object[] {
        //                calcularFreteRequest});
        //    return ((calcularFreteResponse)(results[0]));
        //}

        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:simulaFrete#calcularFrete", RequestNamespace = "urn:calcularFrete", ResponseNamespace = "urn:calcularFrete")]
        [return: System.Xml.Serialization.SoapElementAttribute("calcularFreteResponse")]
        public object calcularFrete(calcularFreteRequest calcularFreteRequest)
        {
            object[] results = this.Invoke("calcularFrete", new object[] { calcularFreteRequest });
            
            System.Xml.XmlNode[] nodes = (System.Xml.XmlNode[])results[0];

            Debug.WriteLine(nodes[0].OuterXml);
            nodes[0].InnerXml = nodes[0].InnerXml.Replace(":calcularFreteResponse", "calcularFreteResponse");
            Debug.WriteLine(nodes[0].OuterXml);

            Debug.WriteLine(nodes[1].OuterXml);
            nodes[1].InnerXml = nodes[1].InnerXml.Replace("tns:DadosFrete", "DadosFrete");
            Debug.WriteLine(nodes[1].OuterXml);

            Debug.WriteLine(nodes[2].OuterXml);
            nodes[2].Attributes[0].InnerXml = nodes[2].Attributes[0].InnerXml.Replace("tns:DadosFrete", "DadosFrete");
            Debug.WriteLine(nodes[2].OuterXml);

            XmlSerializer dadosfreterSerializer = new XmlSerializer(typeof(DadosFrete));
            var dadosfreteClass = dadosfreterSerializer.Deserialize(new XmlNodeReader(nodes[2]));

            XmlSerializer calcularFreteResponseSerializer = new XmlSerializer(typeof(calcularFreteResponse));
            calcularFreteResponse calcularFreteResponseDeserializer = (calcularFreteResponse)calcularFreteResponseSerializer.Deserialize(new XmlNodeReader(nodes[1].ParentNode));

            return ((object)(calcularFreteResponseDeserializer));
        }

        /// <remarks/>
        public void calcularFreteAsync(calcularFreteRequest calcularFreteRequest)
        {
            this.calcularFreteAsync(calcularFreteRequest, null);
        }

        /// <remarks/>
        public void calcularFreteAsync(calcularFreteRequest calcularFreteRequest, object userState)
        {
            if ((this.calcularFreteOperationCompleted == null))
            {
                this.calcularFreteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncalcularFreteOperationCompleted);
            }
            this.InvokeAsync("calcularFrete", new object[] {
                        calcularFreteRequest}, this.calcularFreteOperationCompleted, userState);
        }

        private void OncalcularFreteOperationCompleted(object arg)
        {
            if ((this.calcularFreteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.calcularFreteCompleted(this, new calcularFreteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://edi.totalexpress.com.br/soap/webservice_calculo_frete.total")]
    public partial class calcularFreteRequest
    {

        private string tipoServicoField;

        private string cepDestinoField;

        private string pesoField;

        private string valorDeclaradoField;

        private string tipoEntregaField;

        private bool servicoCODField;

        private bool servicoCODFieldSpecified;

        private string alturaField;

        private string larguraField;

        private string profundidadeField;

        /// <remarks/>
        public string TipoServico
        {
            get
            {
                return this.tipoServicoField;
            }
            set
            {
                this.tipoServicoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType = "nonNegativeInteger")]
        public string CepDestino
        {
            get
            {
                return this.cepDestinoField;
            }
            set
            {
                this.cepDestinoField = value;
            }
        }

        /// <remarks/>
        public string Peso
        {
            get
            {
                return this.pesoField;
            }
            set
            {
                this.pesoField = value;
            }
        }

        /// <remarks/>
        public string ValorDeclarado
        {
            get
            {
                return this.valorDeclaradoField;
            }
            set
            {
                this.valorDeclaradoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType = "nonNegativeInteger")]
        public string TipoEntrega
        {
            get
            {
                return this.tipoEntregaField;
            }
            set
            {
                this.tipoEntregaField = value;
            }
        }

        /// <remarks/>
        public bool ServicoCOD
        {
            get
            {
                return this.servicoCODField;
            }
            set
            {
                this.servicoCODField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ServicoCODSpecified
        {
            get
            {
                return this.servicoCODFieldSpecified;
            }
            set
            {
                this.servicoCODFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType = "nonNegativeInteger")]
        public string Altura
        {
            get
            {
                return this.alturaField;
            }
            set
            {
                this.alturaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType = "nonNegativeInteger")]
        public string Largura
        {
            get
            {
                return this.larguraField;
            }
            set
            {
                this.larguraField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType = "nonNegativeInteger")]
        public string Profundidade
        {
            get
            {
                return this.profundidadeField;
            }
            set
            {
                this.profundidadeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://edi.totalexpress.com.br/soap/webservice_calculo_frete.total")]
    public partial class DadosFrete
    {

        private string prazoField;

        private string valorServicoField;

        /// <remarks/>
        public string Prazo
        {
            get
            {
                return this.prazoField;
            }
            set
            {
                this.prazoField = value;
            }
        }

        /// <remarks/>
        public string ValorServico
        {
            get
            {
                return this.valorServicoField;
            }
            set
            {
                this.valorServicoField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://edi.totalexpress.com.br/soap/webservice_calculo_frete.total")]
    public partial class calcularFreteResponse
    {

        private string codigoProcField;

        private DadosFrete dadosFreteField;

        private string erroConsultaFreteField;

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType = "nonNegativeInteger")]
        public string CodigoProc
        {
            get
            {
                return this.codigoProcField;
            }
            set
            {
                this.codigoProcField = value;
            }
        }

        /// <remarks/>
        public DadosFrete DadosFrete
        {
            get
            {
                return this.dadosFreteField;
            }
            set
            {
                this.dadosFreteField = value;
            }
        }

        /// <remarks/>
        public string ErroConsultaFrete
        {
            get
            {
                return this.erroConsultaFreteField;
            }
            set
            {
                this.erroConsultaFreteField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void calcularFreteCompletedEventHandler(object sender, calcularFreteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class calcularFreteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal calcularFreteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return this.results;
            }
        }
    }
}

#pragma warning restore 1591